Как любой тестировщик веба, вы должны уметь строить модель угроз.
Предположим, ваша компания разрабатывает функционал по переводу денег
между пользователями А и Б с указанием суммы и валюты этой суммы.
В ответе должно быть:
- Какие проблемы безопасности могут быть в функционале
- Что вы порекомендуете, чтобы разработчик не допустил их
- Бонусом, вы можете предложить какие-нибудь технологии
для улучшения безопасности функционала


Прежде чем приступить к возможным угрозам раздею их на категории, в зависимости от нарушителя.
1)Угрозы которые могут быть вызваны внешним нарушителем
  *Социальная инженерия
  *Кража данных пользователей в момент аунтификации (создание ининтичной страницы, но с другим адресом)
  *При "захвате" компьютера пользователя может отслеживать данные аунтификации, номера банковских счетов/карт и тд
  *Перехват данных в момен передачи
  *Атаки на сервер

2)Угромы которые могут быть вызваны внутреним нарушителем
  *Установка вредоностного(в тч следящего) ПО
  *Кража базы данных пользователей
  *Изменений условий перевода(-ов), те изменение отправителя/получателя, суммы/валюты и прочего
  *Проведение несуществующих переводов
  *Уничтожение БД
(Те при доступе к незажиженому железу можнет сделать все что угодно)

/*По данным OWASP на 21й год:  //К нашему случаю тоже все подходит
Подделка запросов на стороне сервера
Сбои регистрации и мониторинга безопасности
Нарушения целостности программного обеспечения и данных
Ошибки идентификации и аутентификации
Уязвимые и устаревшие компоненты
 Неправильная конфигурация 
Небезопасный дизайн
Внедрение кода
Сбои криптографии 
 Нарушение контроля доступа
*/

Варианты решения 
*Хранить хэши аунтификационных данных клиента
*Шифрование при передаче, (и при хранение данных на сервере)
*Позаимствывание уже сужествующих систем защиты у банков
*Перепроверка кода - истранение человеческого фактора (снижение)
*Сделать взлом себя экономически невыгодным
*Дробежка информации при разработке, для исключения того что один сотрудним смог вас нагнуть, или группа
*Не использовать компонены с уже исзветсными уязвимостями
*Быть осторожным с внедрение м новых(неизученных) методов
*Добавить дополнительный этап вунтификации



